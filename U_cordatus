#===================LIBRARIES===================
library(raster)
library(ncdf4)
library(fields)
library(colorRamps)
library(sdmpredictors)
library(leaflet)
library(abind)
library(csv)
library(googledrive)
library(maps)
library(maptools)
library(margins)
library(prediction)
library(ggplot2)
#===============================================
##################atlantic crop area and nice colors for maps
atlantic.ext <- extent(-104,-28.58, -38,34.69)# atlantic crop for the area I will use - long lat
atlantic.ext2 <- extent(256,331.52, -40,34.69)#atlantic crop for the area I will use - geographic coordinates
my.colors = colorRampPalette(c("#5E85B8","#EDF0C0","#C13127"))#color to use in graphs

##################load SST 
setwd ("C:/Users/Murilo/Desktop/Data/Abiotic_data_set/NOAA/Sea surface daily mean temp")
setwd("/Volumes/GoogleDrive/Team Drives/TrEnCh/Projects/Murilo/Sea_surface_daily_temp/Sea surface daily mean temp")
dir()

#Set species' parameters Ucides cordatus
To=12.37 ###lower developmental temperature
G=285.71 ### daily growing degree days 

survi.function=function(day,temp){
  surv= 1.161898  -1.289353e-01*day + 2.447864e-02*day^2 -9.780041e-04*day^3 + 8.937547e-06*day^4 -5.323727e-03*temp +4.684993e-03*day^1*temp  -1.010040e-03*day^2*temp  +3.879397e-05*day^3*temp  -3.207424e-07*day^4*temp
  #constraint from zero to 1
  surv[surv<0]=0
  surv[surv>1]=1
  return(surv)  
}
survi.function

#define seasonal timing in terms of days of year
times2=1:90 # selecting days from January 1st to March 31th
times2.1=317:365 #selecting days from Setempber to December 31th

#years to analyze
years= 1982:2018

#construct file names for first year, Can eventually loop through years
year.ind=1:37
file.name= paste("sst.day.mean.", years[year.ind],".nc", sep="")

#load data for 37 years
sst<-nc_open(file.name)
print(sst)

#extract temperature data
temp=ncvar_get(sst,"sst")
dim(temp) #dimensions lon, lat, time
print(temp)

#extract lon, lat, time
lons= ncvar_get(sst,"lon") #get info about long
dim(lons)
lats= ncvar_get(sst,"lat") #get info about latitude
dim(lats)
times= ncvar_get(sst,"time") #julian date, calendar day, since 1800-01-01
times
#change to day of year
times1= as.Date(times, origin="1800-01-01")
times1
dim(times1)

#--------------
#subset data to area of interest
lats.sel= which(lats>(-37)&lats<(34.69))#specific area of interest in atlantic ocean
lons.sel= which(lons>(260)&lons<(331.52))#specific area of interest in atlantic ocean
temp.sub=temp[lons.sel,lats.sel,] #using the specified area
dim(temp.sub)

#get rid of Pacific values
temp.sub2<-temp.sub #lon, lat, time
#for each latitude, delete values before NA
for(lat.id in 1:280){
  na1=which.max(is.na(temp.sub2[,lat.id,1]))
  temp.sub2[1:na1,lat.id,]<-NA
  print(lat.id)
}
temp.sub2
dim(temp.sub2)

#update latitudes and longitudes
lons= lons[lons.sel]
lats= lats[lats.sel]
#update temp data to subset
temp=temp.sub2

#--------------### I have problems here
#make arrays for output
#development
devel.out= array(NA, dim=c(length(years),length(lons),length(lats),length(times2)))
#survival
surv.out= array(NA, dim=c(length(years), length(lons),length(lats),length(times2)))

for(year.ind in 1:length(years)){#loop through years

 for(lon.k in 1:length(lons)){ #loop through longitude
  lats.sel2= which(!is.na(temp[lon.k,,1]))#find latitudes with data
  
   if(length(lats.sel2)>0){ #check there's cells with data
    
     for(lat.k in lats.sel2){ #loop through latitudes with data
      #estimate growing degree days
      GDDs= temp[lon.k,lat.k,]-To #how many growing degree days per day
      #cummulative sum of GDDs
      cumGDDs=cumsum(GDDs) 
      
       for(time.k in times2){ #estimate development time starting at different days
        cumGDDs= cumsum( GDDs[times2[time.k]:365] )
        #substract off starting value
        cumGDDs= cumGDDs-cumGDDs[1]
        
        #find first date the exceed G
        devel.out[year.ind,lon.k,lat.k,time.k]= which.max(cumGDDs>G)+time.k
        
        #estimate survival until reaching G
        day= which.max(cumGDDs>G)
        #mean temp
        ### constrain to end of year, NEED TO FIX
        end.day= times2[time.k]+day
        if(end.day>365)end.day=365
        temps= mean(temp[lon.k,lat.k,times2[time.k]:end.day])
        #estimate survival
        surv.out[year.ind,lon.k,lat.k,time.k]= survi.function(day, temps)
        
      } #end loop timing
    }#end latitude loop
  } #end check for data
 } #end longitude loop
}#end years loop

surv.out<-replace(surv.out, surv.out > 0.69 , 0)

#plot out day to development assuming development starts on day 1 
e<-(c(10,20,30,40,50,90,140,150,160,170,180))
image.plot(year.ind,lons,lats,devel.out[,,,1], col=my.colors(1000),legend.lab = "days to megalopae phase",axis.args=list(at=e, labels=names(e)))
data(wrld_simpl)
plot(elide(wrld_simpl, shift = c(360, 0)), add = TRUE)
abline(h = 33.87, v = 0, col = "blue") #north limit C. danae
abline(h = -32.17, v = 0, col = "blue") #south limit C. danae
abline(h = 30.00, v = 0, col = "red") #north limit M. nodifrons
abline(h = -28.51, v = 0, col = "red") #south limit M. nodifrons
abline(h = 29.00, v = 0, col = "green") #north limit U. cordatus
abline(h = -28.00, v = 0, col = "green") #south limit U. cordatus

#plot out corresponding survival
s<-(c(0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1))
image.plot(year.ind,lons,lats,surv.out[,,,1],col=my.colors(1000),axis.args=list(at=s, labels=names(s)))
data(wrld_simpl)
plot(elide(wrld_simpl, shift = c(360, 0)), add = TRUE)
abline(h = 33.87, v = 0, col = "blue") #north limit C. danae
abline(h = -32.17, v = 0, col = "blue") #south limit C. danae
abline(h = 30.00, v = 0, col = "red") #north limit M. nodifrons
abline(h = -28.51, v = 0, col = "red") #south limit M. nodifrons
abline(h = 29.00, v = 0, col = "green") #north limit U. cordatus
abline(h = -28.00, v = 0, col = "green") #south limit U. cordatus

###survival data Ucides cordatus
setwd ("C:/Users/Murilo/Desktop/Data/Abiotic_data_set/NOAA/Sea surface daily mean temp")
dir()
Survival_Cottens=read.table("Cottens_2010.txt",header=T)
Survival_Diele=read.table("Diele_2006.txt",header=T)
Survival_Santana=read.table("Santanna_2004.txt",header=T)
Survival_Silva=read.table("Silva_2012.txt",header=T)
#combine dataset
surv.dat_u_cordatus= rbind(Survival_Cottens, Survival_Diele, Survival_Santana, Survival_Santana)

#Cottens U. cordatus
ggplot(Survival_Cottens, aes(x=day, y=surv, color=temp, group=temp)) + geom_point() + 
  geom_smooth(method="lm", formula=y~poly(x, 4))

#Diele U. cordatus
ggplot(Survival_Diele, aes(x=day, y=surv, color=temp, group=temp)) + geom_point() + 
  geom_smooth(method="lm", formula=y~poly(x, 4))

#Santana U. cordatus
ggplot(Survival_Santana, aes(x=day, y=surv, color=temp, group=temp)) + geom_point() + 
  geom_smooth(method="lm", formula=y~poly(x, 4))

#Silva U. cordatus
ggplot(Survival_Silva, aes(x=day, y=surv, color=temp, group=temp)) + geom_point() + 
  geom_smooth(method="lm", formula=y~poly(x, 4))

#plot combined
ggplot(surv.dat_u_cordatus, aes(x=day, y=surv, color=temp, group=temp)) + geom_point() + 
  geom_smooth(method="lm", formula=y~poly(x, 4))

#-------------
survi=surv.dat_u_cordatus$surv
day=surv.dat_u_cordatus$day
temperature=surv.dat_u_cordatus$temp

mod_uc= lm(surv~poly(day,4, raw=TRUE)*temp, data=surv.dat_u_cordatus)
mod_uc= lm(surv~ day + I(day^2) + I(day^3) + I(day^4) + temp +day:temp + I(day^2):temp + I(day^3):temp + I(day^4):temp, data=surv.dat_u_cordatus)
#check model         
plot(day, survi)
points(day, predict(mod_uc), col="red")
#extract coefficients
coefs= coef(mod_uc) 

#make function manually or could use the predict() function
survi.function=function(day,temp){
  surv= 1.161898  -1.289353e-01*day + 2.447864e-02*day^2 -9.780041e-04*day^3 + 8.937547e-06*day^4 -5.323727e-03*temp +4.684993e-03*day^1*temp  -1.010040e-03*day^2*temp  +3.879397e-05*day^3*temp  -3.207424e-07*day^4*temp
  #constraint from zero to 1
  surv[surv<0]=0
  surv[surv>1]=1
  return(surv)  
}
survi.function
